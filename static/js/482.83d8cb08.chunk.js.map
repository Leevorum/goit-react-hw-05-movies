{"version":3,"file":"static/js/482.83d8cb08.chunk.js","mappings":"sQACA,EAAgC,iCAAhC,EAA8E,8B,SCK/D,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC1BC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,aAAcC,EAAcH,EAAdG,UACtBC,EAAK,UAJG,mCAIH,OAAgBF,GAG3B,OACE,4BACE,gBACEG,IALU,wCAKLD,EAAoBA,EAAQE,EACjCC,IAAKN,EACLO,UAAWC,KAEb,uBAAIR,KACJ,eAAGO,UAAWC,EAAd,wBAA2CN,QClBjD,MAAgC,4BAAhC,EAAyE,yBAAzE,EAA6G,uBCK9F,SAASO,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEeC,EAAAA,EAAAA,IAAsBJ,GAFrC,UAG0B,KADlCK,EAFQ,QAGKC,KAAKC,KAAKC,OAHf,iDAMdX,EAAUQ,EAAeC,KAAKC,MANhB,gDAQdR,GAAc,GARA,yDAAH,qDAWfI,MACC,CAACH,KAGF,iBAAKR,UAAWC,EAAhB,UACGK,IAAc,iEACf,eAAIN,UAAWC,EAAf,SACGG,GACCA,EAAOa,KAAI,SAAAzB,GAAK,OACd,eAAmBQ,UAAWC,EAA9B,UACE,SAACV,EAAD,CAAWC,MAAOA,KADXA,EAAM0B,c,0MC9BrBC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,iFACQC,IAAAA,IAAA,4DAC0CH,EAD1C,iCAC0EE,EAD1E,gCADR,0GAMA,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,8FACQD,IAAAA,IAAA,gEAC8CH,IAFtD,0GAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiChB,GAAjC,iFACQc,IAAAA,IAAA,6CAC2Bd,EAD3B,oBAC8CW,EAD9C,oBADR,0GAKA,SAAeP,EAAtB,+CAAO,OAAP,oBAAO,WAAqCJ,GAArC,iFACQc,IAAAA,IAAA,6CAC2Bd,EAD3B,4BACsDW,EADtD,oBADR,0GAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAwCjB,GAAxC,iFACQc,IAAAA,IAAA,6CAC2Bd,EAD3B,4BACsDW,EADtD,2BADR,4G","sources":["webpack://goit-react-hw-05-movies/./src/components/ActorCard/actorCard.module.css?0e74","components/ActorCard/ActorCard.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","service/api-service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"characterText\":\"actorCard_characterText__pcZ2J\",\"actorImage\":\"actorCard_actorImage__BZLOP\"};","import logo from '../images/dummy_image.png';\nimport s from './actorCard.module.css';\nimport PropTypes from 'prop-types';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w200';\n\nexport default function ActorCard({ actor }) {\n  const { name, profile_path, character } = actor;\n  const image = `${baseUrl}${profile_path}`;\n  const noImage = 'https://image.tmdb.org/t/p/w200null';\n\n  return (\n    <div>\n      <img\n        src={image !== noImage ? image : logo}\n        alt={name}\n        className={s.actorImage}\n      ></img>\n      <p>{name}</p>\n      <p className={s.characterText}>Character: {character}</p>\n    </div>\n  );\n}\nActorCard.propTypes = {\n  actor: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"actorsWrapper\":\"cast_actorsWrapper__1MbC3\",\"actorsList\":\"cast_actorsList__qDaUA\",\"listItem\":\"cast_listItem__Km70l\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchCastMovieDetails } from 'service/api-service';\nimport ActorCard from 'components/ActorCard/ActorCard';\nimport s from './cast.module.css';\n\nexport default function Cast() {\n  const [actors, setActors] = useState(null);\n  const [fetchError, setFetchError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const actorsResponce = await fetchCastMovieDetails(movieId);\n        if (actorsResponce.data.cast.length === 0) {\n          return;\n        }\n        setActors(actorsResponce.data.cast);\n      } catch (error) {\n        setFetchError(true);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div className={s.actorsWrapper}>\n      {fetchError && <p>There is no infromation about actors</p>}\n      <ul className={s.actorsList}>\n        {actors &&\n          actors.map(actor => (\n            <li key={actor.id} className={s.listItem}>\n              <ActorCard actor={actor} />\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '4cfbca3d61713e2ef2c4275dd6982dc3';\n\nexport async function searchhMovies(queryName) {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${queryName}&page=1&include_adult=false`,\n  );\n}\n\nexport async function fetchTrendingMovies() {\n  return await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`,\n  );\n}\n\nexport async function fetchMovieDetails(movieId) {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n  );\n}\nexport async function fetchCastMovieDetails(movieId) {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n}\nexport async function fetchReviewsMovieDetails(movieId) {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n}\n"],"names":["ActorCard","actor","name","profile_path","character","image","src","logo","alt","className","s","Cast","useState","actors","setActors","fetchError","setFetchError","movieId","useParams","useEffect","fetchData","fetchCastMovieDetails","actorsResponce","data","cast","length","map","id","API_KEY","searchhMovies","queryName","axios","fetchTrendingMovies","fetchMovieDetails","fetchReviewsMovieDetails"],"sourceRoot":""}