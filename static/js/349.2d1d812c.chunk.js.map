{"version":3,"file":"static/js/349.2d1d812c.chunk.js","mappings":"gRAKe,SAASA,EAAaC,GACnC,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACJF,EAASG,OACXN,EAAeG,EAASG,MAAMP,eAE/B,CAACI,EAASG,SAEbD,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAS,mCAAG,uFACI,KAAhBR,EADY,kEAIaS,EAAAA,EAAAA,IAAcT,GAJ3B,UAK2B,KADrCU,EAJU,QAKGC,KAAKC,QAAQC,OALhB,uBAMdC,MAAM,oCACNX,EAAU,IAPI,0BAUhBA,EAAUO,EAAeC,KAAKC,SAVd,4CAAH,qDAYfJ,MACC,CAACR,IAeJ,OACE,4BACE,kBAAMe,UAAU,aAAaC,SAXZ,SAAAC,GACnBA,EAAIC,iBACU,KAAVpB,IAGJG,EAAeH,GACfC,EAAS,MAKP,WACE,mBAAQoB,KAAK,SAASJ,UAAU,oBAAhC,UACE,iBAAMA,UAAU,0BAAhB,uBAGF,kBACEA,UAAU,mBACVK,KAAK,QACLC,MAAOvB,EACPqB,KAAK,OACLG,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SA5Ba,SAAAR,GACnBlB,EAASkB,EAAIS,OAAOL,cA8BlB,wBACGnB,GACCA,EAAOyB,KAAI,SAAAC,GAAK,aACd,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IACrBvB,MAAO,CAAEwB,KAAM3B,EAAUJ,YAAaA,GAFxC,0BAIG4B,QAJH,IAIGA,OAJH,EAIGA,EAAOI,aAJV,eAImBJ,QAJnB,IAImBA,OAJnB,EAImBA,EAAOR,QALnBQ,EAAME,c,0MClErBG,EAAU,mCAET,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA6ByB,GAA7B,gGAEoBC,IAAAA,IAAA,4DACgCF,EADhC,iCACgEC,EADhE,gCAFpB,cAEGE,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBJ,IAAAA,IAAA,gEACoCF,IAHxD,cAEGG,EAFH,yBAMIA,GANJ,gCAQHC,QAAQC,MAAR,MARG,gFAYA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEoBN,IAAAA,IAAA,6CACiBM,EADjB,oBACoCR,EADpC,oBAFpB,cAEGG,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAqCD,GAArC,gGAEoBN,IAAAA,IAAA,6CACiBM,EADjB,4BAC4CR,EAD5C,oBAFpB,cAEGG,EAFH,yBAMIA,GANJ,gCAQHC,QAAQC,MAAR,MARG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAwCF,GAAxC,gGAEoBN,IAAAA,IAAA,6CACiBM,EADjB,4BAC4CR,EAD5C,2BAFpB,cAEGW,EAFH,yBAMIA,GANJ,gCAQHP,QAAQC,MAAR,MARG","sources":["pages/SearchMovies.jsx","service/api-service.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { searchhMovies } from '../service/api-service';\n\nexport default function SearchMovies(props) {\n  const [input, setInput] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  //rewrite searchquery if back from details to search\n  useEffect(() => {\n    if (location.state) {\n      setSearchQuery(location.state.searchQuery);\n    }\n  }, [location.state]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (searchQuery === '') {\n        return;\n      }\n      const moviesResponce = await searchhMovies(searchQuery);\n      if (moviesResponce.data.results.length === 0) {\n        alert('There is no movie with this name');\n        setMovies([]);\n        return;\n      }\n      setMovies(moviesResponce.data.results);\n    };\n    fetchData();\n  }, [searchQuery]);\n\n  const handleChange = evt => {\n    setInput(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (input === '') {\n      return;\n    }\n    setSearchQuery(input);\n    setInput('');\n  };\n\n  return (\n    <div>\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          name=\"input\"\n          value={input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleChange}\n        />\n      </form>\n      <ul>\n        {movies &&\n          movies.map(movie => (\n            <li key={movie.id}>\n              <Link\n                to={`/movies/${movie.id}`}\n                state={{ from: location, searchQuery: searchQuery }}\n              >\n                {movie?.title ?? movie?.name}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '4cfbca3d61713e2ef2c4275dd6982dc3';\n\nexport async function searchhMovies(queryName) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${queryName}&page=1&include_adult=false`,\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`,\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function fetchCastMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function fetchReviewsMovieDetails(movieId) {\n  try {\n    const responce = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    );\n\n    return responce;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["SearchMovies","props","useState","input","setInput","searchQuery","setSearchQuery","movies","setMovies","location","useLocation","useEffect","state","fetchData","searchhMovies","moviesResponce","data","results","length","alert","className","onSubmit","evt","preventDefault","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","map","movie","to","id","from","title","API_KEY","queryName","axios","response","console","error","fetchTrendingMovies","fetchMovieDetails","movieId","fetchCastMovieDetails","fetchReviewsMovieDetails","responce"],"sourceRoot":""}