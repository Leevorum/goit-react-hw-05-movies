{"version":3,"file":"static/js/77.90fffbe8.chunk.js","mappings":"oLACA,EAAwB,+BAAxB,EAAqE,qCAArE,EAAkH,+BAAlH,EAAyJ,+B,SCK1I,SAASA,EAAT,GAAqC,IAAD,IAATC,EAAS,EAATA,MAClCC,EAAK,UAHG,mCAGH,OAAgBD,EAAME,aAE3BC,EAAWC,KAAKC,MAA2B,GAArBL,EAAMM,cAElC,OACE,4BACE,gBACEC,IANU,wCAMLN,EAAoBA,EAAQO,EACjCC,IAAG,iBAAET,QAAF,IAAEA,OAAF,EAAEA,EAAOU,aAAT,eAAkBV,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOW,KAC5BC,UAAWC,KAEb,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,0BAAwBb,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOU,aAA/B,eAAwCV,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAOW,QAC/C,eAAGC,UAAWC,EAAd,uBAAkCV,EAAlC,e,6JCnBR,EAAgC,gCAAhC,EAA4E,4BAA5E,EAAqH,6BAArH,EAA6J,2B,SCK9I,SAASW,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEeC,EAAAA,EAAAA,MAFf,UAG6B,KADrCC,EAFQ,QAGKC,KAAKC,QAAQC,OAHlB,iDAMdX,EAAUQ,EAAeC,KAAKC,SANhB,gDAQdR,GAAc,GARA,yDAAH,qDAWfI,MACC,KAED,iBAAKX,UAAWC,EAAhB,UACGG,IAAU,eAAIJ,UAAWC,EAAf,6BACX,eAAID,UAAWC,EAAf,SACGG,GACCA,EAAOa,KAAI,SAAA7B,GAAK,OACd,eAAmBY,UAAWC,EAA9B,UACE,SAAC,KAAD,CAAMiB,GAAE,kBAAa9B,EAAM+B,IAAMC,MAAO,CAAEC,KAAMb,GAAhD,UACE,SAACrB,EAAA,EAAD,CAAiBC,MAAOA,OAFnBA,EAAM+B,SAOpBb,IAAc,mE,0MCpCfgB,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,iFACQC,IAAAA,IAAA,4DAC0CH,EAD1C,iCAC0EE,EAD1E,gCADR,0GAMA,SAAeZ,IAAtB,4CAAO,OAAP,oBAAO,8FACQa,IAAAA,IAAA,gEAC8CH,IAFtD,0GAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,iFACQF,IAAAA,IAAA,6CAC2BE,EAD3B,oBAC8CL,EAD9C,oBADR,0GAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAqCD,GAArC,iFACQF,IAAAA,IAAA,6CAC2BE,EAD3B,4BACsDL,EADtD,oBADR,0GAKA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAwCF,GAAxC,iFACQF,IAAAA,IAAA,6CAC2BE,EAD3B,4BACsDL,EADtD,2BADR,4G","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesSmallCard/MoviesSmallCard.module.css?fedd","components/MoviesSmallCard/MoviesSmallCard.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/homePage.module.css?d1eb","pages/HomePage/HomePage.jsx","service/api-service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"MoviesSmallCard_image__iSmNo\",\"textWrapper\":\"MoviesSmallCard_textWrapper__zUZrl\",\"title\":\"MoviesSmallCard_title__WprdU\",\"score\":\"MoviesSmallCard_score__WnGhu\"};","import logo from '../images/dummy_image.png';\nimport s from './MoviesSmallCard.module.css';\nimport PropTypes from 'prop-types';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w400';\n\nexport default function MoviesSmallCard({ movie }) {\n  const image = `${baseUrl}${movie.poster_path}`;\n  const noImage = 'https://image.tmdb.org/t/p/w400null';\n  const useScore = Math.round(movie.vote_average * 10);\n\n  return (\n    <div>\n      <img\n        src={image !== noImage ? image : logo}\n        alt={movie?.title ?? movie?.name}\n        className={s.image}\n      ></img>\n      <div className={s.textWrapper}>\n        <p className={s.title}>{movie?.title ?? movie?.name}</p>\n        <p className={s.score}>UserScore {useScore}%</p>\n      </div>\n    </div>\n  );\n}\n\nMoviesSmallCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesWrapper\":\"homePage_moviesWrapper__bloZX\",\"pageTitle\":\"homePage_pageTitle__1whXy\",\"moviesList\":\"homePage_moviesList__kTM9W\",\"listItem\":\"homePage_listItem__VXARf\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'service/api-service';\nimport MoviesSmallCard from 'components/MoviesSmallCard/MoviesSmallCard';\nimport s from './homePage.module.css';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [fetchError, setFetchError] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const moviesResponse = await fetchTrendingMovies();\n        if (moviesResponse.data.results.length === 0) {\n          return;\n        }\n        setMovies(moviesResponse.data.results);\n      } catch (error) {\n        setFetchError(true);\n      }\n    };\n    fetchData();\n  }, []);\n  return (\n    <div className={s.moviesWrapper}>\n      {movies && <h1 className={s.pageTitle}>Trending Today</h1>}\n      <ul className={s.moviesList}>\n        {movies &&\n          movies.map(movie => (\n            <li key={movie.id} className={s.listItem}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <MoviesSmallCard movie={movie} />\n              </Link>\n            </li>\n          ))}\n      </ul>\n      {fetchError && <p>There are no trending movies today</p>}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '4cfbca3d61713e2ef2c4275dd6982dc3';\n\nexport async function searchhMovies(queryName) {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${queryName}&page=1&include_adult=false`,\n  );\n}\n\nexport async function fetchTrendingMovies() {\n  return await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`,\n  );\n}\n\nexport async function fetchMovieDetails(movieId) {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n  );\n}\nexport async function fetchCastMovieDetails(movieId) {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n}\nexport async function fetchReviewsMovieDetails(movieId) {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n}\n"],"names":["MoviesSmallCard","movie","image","poster_path","useScore","Math","round","vote_average","src","logo","alt","title","name","className","s","HomePage","useState","movies","setMovies","fetchError","setFetchError","location","useLocation","useEffect","fetchData","fetchTrendingMovies","moviesResponse","data","results","length","map","to","id","state","from","API_KEY","searchhMovies","queryName","axios","fetchMovieDetails","movieId","fetchCastMovieDetails","fetchReviewsMovieDetails"],"sourceRoot":""}